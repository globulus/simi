a = 5
b = a + 3
a $= b - 4 / (2 + 2 * 2)
b /= 2
print "a is \(a) == 7.33"
print "b is \(b) == 4"


print "if test \"a\" =="
if a < 2 or a < 10 {
    print "a"
} else if b == 4 {
    print "b"
} else {
    print "both are false"
}

print "testing nil coalescence 5 =="
a $= nil
print a ?? 5

a $= 5
while a > 1 {
    print "a is \(a)"
    if a == 4 {
        a -= 1
        continue
    } else if a == 2 {
        break
    }
    print "again"
    a -= 1
}
print "while test 2 == \(a)"

print "when test 3 or 4 == "
a $= 3
when a {
    2 { print "2" }
    3 or 4 { print "3 or 4" }
    else { print "else" }
}

print "if expr test 2 =="
print if 0 {
    print "yup"
    5
} else if 0 {
    print "nope"
    6
} else {
    2
}

print "when expr test 5 == "
print when a {
    2 = 2
    3 = 5
    else = 6
}

print "func test func6 == "
def func(what = "func", smth = 6) {
    print what + smth
    a $= 2
    print "a inside is \(a)"
}
func()

print "return func test 5 == "
def retFunc() {
    print "in ret func"
    return 5
    print "this shouldn't be printed"
}
print retFunc()

#def f3() { func(1, 2, 3) } # Uncomment to test stack trace printing
#def f2() { f3() }
#def f1() { f2() }
#f1()
