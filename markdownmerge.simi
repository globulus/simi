import "warp_nacelles/io" for *

DEFAULT_MD = "default.md"

fn frontmatter(title, visible = true) = "---
title: '$title docs'
visible: $visible
anchors:
   active: true
---

"

extend String {
    fn capitalizeFirst = @0.upperCased() + substring(1, @len)
    fn decapitalizeFirst = @0.lowerCased() + substring(1, @len)
    fn dashesToCamelCase = split("-").map(=$0.capitalizeFirst()).joinToString("").decapitalizeFirst()
}

fn ios() {
    DIR = "/Users/gordanglavas/Desktop/github/CodeCons/able-ios/.build/documentation/"
    HOME_MD = "Home.md"
    home = File(DIR + HOME_MD)
    merge = String.builder().add(home.readString())
    for path in File(DIR).list()\
                .where(=$0 not in [HOME_MD, DEFAULT_MD, "_Footer.md", "_Sidebar.md"] and $0.endsWith(".md"))\
                .sorted() {
        merge.add("\n\n").add(File(DIR + path).readString())
    }
    content = merge.build().replacing("â€‹", "").replacing("x-source-tag://", "#").replacing("](/", "](#")
    WriteStream(File("/Users/gordanglavas/Desktop/github/CodeCons/able-fe/grav-admin/user/pages/03.docs/02.docs/01.ios/$DEFAULT_MD")).use({
        $0.write(frontmatter("iOS") + content)
        print "Done writing to $($0.file.path)"
    })
}

fn android() {
    DIR = "/Users/gordanglavas/Desktop/github/CodeCons/able-android/ablelib/build/docs/ablelib"
    INDEX_MD = "index.md"
    fn readFile(file) {
        text = file.readLines()\
            .where(=not $0.startsWith("//"))\
            .joinToString("\n")
        allMatches = [for match in Regex("(\\(|\\/)[a-z,A-Z,0-9,-]*\\.(md)").find(text) do match.value].distinct()
        for match in allMatches {
            text = text.replacing(match, if "index.md" in match "" else\
                        match.dashesToCamelCase()\
                            .replacing("/", "#")\
                            .replacing("(", "(#")\
                            .replacing(".md", "")\
                    )
        }
        return text
    }

    fn scanDirectory(relativePath) {
        path = "$DIR/$relativePath"
        home = File("$path/$INDEX_MD")
        merge = String.builder().add(readFile(home))
        for listed in File(path).list()\
                    .where(=$0 not in [INDEX_MD, "package-list"] and not $0.startsWith("."))\
                    .sorted() {
            file = File("$path/$listed")
            if file.isDirectory() {
                scanDirectory((if relativePath.isEmpty() "" else "$relativePath/") + listed)
            } else {
                merge.add("\n\n").add(readFile(file))
            }
        }
        WriteStream(File("/Users/gordanglavas/Desktop/github/CodeCons/able-fe/grav-admin/user/pages/03.docs/02.docs/02.android/$relativePath/$DEFAULT_MD")).use({
            $0.write(frontmatter(\
                if relativePath.isEmpty() "Android" else relativePath.split("/").(-1),\
                relativePath.isEmpty()\
            ) + merge.build())
            print "Done writing to $($0.file.path)"
        })
    }
    scanDirectory("")
}

android()